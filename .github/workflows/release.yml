name: Release (Changesets)

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          token: ${{ secrets.CHANGESETS_TOKEN }}

      - uses: pnpm/action-setup@v4
        with: { version: 10 }

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm -r --filter @native-ui-org/primitives run build
          pnpm -r --filter @native-ui-org/context-menu run build

      - name: Configure pnpm for npm
        run: |
          echo "@native-ui-org:registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release PR or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm changeset publish
          createGithubReleases: false
          title: "chore: release primitives"
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create custom GitHub Releases
        if: steps.changesets.outputs.published == 'true'
        run: |
          for package in $(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | @base64'); do
            pkg=$(echo "$package" | base64 --decode | jq -r '.name')
            version=$(echo "$package" | base64 --decode | jq -r '.version')
            shortName=$(echo "$pkg" | sed 's/@native-ui-org\///')
            
            # Create git tag
            tag="${shortName}@${version}"
            git tag "$tag" || true
            git push origin "$tag" || true
            
            # Extract changelog content for this specific package
            changelogContent=""
            changelogFile="packages/${shortName}/CHANGELOG.md"
            if [ -f "$changelogFile" ]; then
              # Extract the changelog section for this version
              changelogContent=$(awk "/^## \[${version}\]/,/^## \[/" "$changelogFile" | head -n -1)
            fi
            
            # Build release notes based on package type
            releaseTitle="${shortName}@${version}"
            releaseNotes="## üöÄ Release ${version}\n\n"
            
            # Add changelog if available
            if [ -n "$changelogContent" ]; then
              releaseNotes+="### üìù Changelog\n\n"
              releaseNotes+="$changelogContent\n"
            fi
            
            # Add package-specific installation instructions
            releaseNotes+="\n### üì• Installation\n\n"
            releaseNotes+="\`\`\`bash\n"
            releaseNotes+="npm install ${pkg}\n"
            releaseNotes+="\`\`\`\n"
            
            # Add package-specific information
            case "$shortName" in
              "primitives")
                releaseNotes+="\n### üìö Documentation\n\n"
                releaseNotes+="Visit the [primitives documentation](https://github.com/nativeui-org/primitives#readme) for usage examples.\n"
                ;;
              "context-menu")
                releaseNotes+="\n### üìö Documentation\n\n"
                releaseNotes+="Visit the [context-menu documentation](https://github.com/nativeui-org/primitives/tree/main/packages/context-menu#readme) for usage examples.\n"
                ;;
              "sandbox")
                releaseNotes+="\n### üåê Demo\n\n"
                releaseNotes+="This package contains the demo application. Visit the [live demo](https://primitives.nativeui.org) to see it in action.\n"
                ;;
            esac
            
            # Create the release
            gh release create "$tag" \
              --title "$releaseTitle" \
              --notes "$releaseNotes" \
              --repo nativeui-org/primitives
          done
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}
